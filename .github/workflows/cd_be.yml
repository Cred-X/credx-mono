name: deploy backend to cloudflare workers

on:
  push:
    branches:
      - main
    paths:
      - "apps/server/**"
      - ".github/workflows/cd_be.yml"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      server: ${{ steps.changes.outputs.server }}
    steps:
      - name: checkout code repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: check for server changes
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Check if server files changed
          if echo "$CHANGED_FILES" | grep -E '^apps/server/(src/|package\.json|wrangler\.|pnpm-lock\.yaml)'; then
            echo "server=true" >> $GITHUB_OUTPUT
          else
            echo "server=false" >> $GITHUB_OUTPUT
          fi

      - name: log server change status
        run: |
          echo "Server change detected: ${{ steps.changes.outputs.server }}"

  deploy:
    needs: changes
    if: needs.changes.outputs.server == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/server
    steps:
      - name: checkout code repository
        uses: actions/checkout@v4

      - name: setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: install dependencies
        run: bun install

      - name: generate wrangler config
        run: |
          cat > wrangler.jsonc <<EOF
          {
            "name": "credx-api",
            "account_id": "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}",
            "main": "src/index.ts",
            "compatibility_date": "$(date +%Y-%m-%d)",
            "compatibility_flags": ["nodejs_compat"],
            "vars": {
              "FRONTEND_URL": "${{ vars.FRONTEND_URL }}",
              "REDIS_URL": "${{ secrets.REDIS_URL }}",
              "REDIS_TOKEN": "${{ secrets.REDIS_TOKEN }}",
              "SOLANA_RPC_URL": "${{ secrets.SOLANA_RPC_URL }}",
              "SOLANA_API_KEY": "${{ secrets.SOLANA_API_KEY }}"
            }
          }
          EOF

      - name: deploy to cloudflare workers
        run: bun wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}